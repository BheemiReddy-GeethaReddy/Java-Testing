DbConn.java

package com.myproject.db.util;

import java.sql.Connection;
import java.sql.DriverManager;

public class DbConn {

public static Connection dbConnect()
{
try{
Class.forName("oracle.jdbc.OracleDriver");
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","system","geetha23");
return con;
}
catch (Exception e) {
e.printStackTrace();
return null;
}
}
}


Player.java


package com.myproject.model;

public class Player {
String name;
String role;
int jerseyno;
String team;
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getRole() {
	return role;
}
public void setRole(String role) {
	this.role = role;
}
public int getJerseyno() {
	return jerseyno;
}
public void setJerseyno(int jerseyno) {
	this.jerseyno = jerseyno;
}
public String getTeam() {
	return team;
}
public void setTeam(String team) {
	this.team = team;
}
public Player(String name, String role, int jerseyno, String team) {
	super();
	this.name = name;
	this.role = role;
	this.jerseyno = jerseyno;
	this.team = team;
}
public Player() {
	super();
	// TODO Auto-generated constructor stub
}
@Override
public String toString() {
	return "Player Info : [name=" + name + ", role=" + role + ", jerseyno=" + jerseyno + ", team=" + team + "]";
}

}


PlayerDao.java


package com.myproject.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import com.myproject.db.util.DbConn;
import com.myproject.model.Player;


public class PlayerDao {
public String savePlayer(Player player)
{
try
{
String sql="insert into player values(?,?,?,?)";

Connection con= DbConn.dbConnect();
PreparedStatement stat=con.prepareStatement(sql);

stat.setString(1, player.getName());
stat.setString(2, player.getRole());
stat.setInt(3, player.getJerseyno());
stat.setString(4,player.getTeam());

int res= stat.executeUpdate();

if(res>0)
return "Records inserted successfully";

}

catch(Exception e)
{
e.printStackTrace();
}
return "Cannot insert records";
}

public Player getPlayerByName(String name)
{

try {

Connection con= DbConn.dbConnect();

String sql="select * from player where name=?";
PreparedStatement stat=con.prepareStatement(sql);

stat.setString(1,name);
ResultSet rs= stat.executeQuery();

rs.next();
String role=rs.getString("role");
int jerseyno= rs.getInt("jerseyno");
String team=rs.getString("team");

Player player=new Player(name,role,jerseyno,team);

return player;

}
catch (Exception e) {

e.printStackTrace();
}
return null;
}
public ArrayList<Player> getPlayers()
{

try {

Connection con= DbConn.dbConnect();

String sql="select * from player";
PreparedStatement stat=con.prepareStatement(sql);


ResultSet rs= stat.executeQuery();

ArrayList<Player>players=new ArrayList<>();

while(rs.next())
{

String name=rs.getString("name");
String role=rs.getString("role");
int jerseyno= rs.getInt("jerseyno");
String team=rs.getString("team");

Player player=new Player(name,role,jerseyno,team);

players.add(player);
}

return players;

}
catch (Exception e) {

e.printStackTrace();
}
return null;
}
public String deletePlayerByName(String name)
{

try {

Connection con= DbConn.dbConnect();

String sql="delete from player where name=?";
PreparedStatement stat=con.prepareStatement(sql);

stat.setString(1,name);
int rs= stat.executeUpdate();

if(rs>0)
return "Records for name "+name +" are deleted";
}
catch (Exception e) {

e.printStackTrace();
}
return null;
}
public String updatePlayer(Player player)
{

try {


Connection con= DbConn.dbConnect();

Player playerOld=getPlayerByName(player.getName());

String sql="update player set role=?, jerseyno=?,team=? where name=?";

PreparedStatement stat=con.prepareStatement(sql);


if(player.getRole()==null)
   player.setRole(playerOld.getRole());

if(player.getJerseyno()==0)
   player.setJerseyno(playerOld.getJerseyno());

if(player.getTeam()==null)
   player.setTeam(playerOld.getTeam());

stat.setString(1,player.getRole() );
stat.setInt(2,player.getJerseyno());
stat.setString(3, player.getTeam());
stat.setString(4,player.getName() );

int rs= stat.executeUpdate();

if(rs>0) {

System.out.println(playerOld);

System.out.println(player);

return "Records updated for name "+player.getName();
}
}
catch (Exception e) {

e.printStackTrace();
}
return null;
}
}



PlayerService.java


package com.myproject.service;

import java.util.ArrayList;

import com.myproject.dao.PlayerDao;
import com.myproject.model.Player;

public class PlayerService {
public static void main(String[] args)
{
	
	Player player=new Player("Sanju","Captain",49,"RR");
	PlayerDao dao=new PlayerDao();
	String res= dao.savePlayer(player);
	System.out.println(res);
	Player playerUpdate=new Player();
	playerUpdate.setName("Siraz");
	playerUpdate.setTeam("CSK");
	System.out.println(dao.updatePlayer(playerUpdate));
	System.out.println(dao.deletePlayerByName("MSD"));
	ArrayList<Player> players= dao.getPlayers();
    for(Player player1:players)
	{
	System.out.println(player1);
	}
	}

}

